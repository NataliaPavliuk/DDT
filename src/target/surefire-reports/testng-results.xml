<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" total="4" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="65393" started-at="2022-06-13T08:29:14Z" finished-at="2022-06-13T08:30:19Z">
    <groups>
    </groups>
    <test name="test.Test" duration-ms="65393" started-at="2022-06-13T08:29:14Z" finished-at="2022-06-13T08:30:19Z">
      <class name="test.Test">
        <test-method status="PASS" signature="profileSetUp()[pri:0, instance:test.Test@28feb3fa]" name="profileSetUp" is-config="true" duration-ms="603" started-at="2022-06-13T11:29:14Z" finished-at="2022-06-13T11:29:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- profileSetUp -->
        <test-method status="PASS" signature="testsSetUo()[pri:0, instance:test.Test@28feb3fa]" name="testsSetUo" is-config="true" duration-ms="5788" started-at="2022-06-13T11:29:14Z" finished-at="2022-06-13T11:29:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsSetUo -->
        <test-method status="PASS" signature="myTest(java.lang.String)[pri:0, instance:test.Test@28feb3fa]" name="myTest" duration-ms="12560" started-at="2022-06-13T11:29:20Z" data-provider="dp" finished-at="2022-06-13T11:29:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ноутбук,HP,50000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.Test@28feb3fa]" name="tearDown" is-config="true" duration-ms="1159" started-at="2022-06-13T11:29:33Z" finished-at="2022-06-13T11:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testsSetUo()[pri:0, instance:test.Test@28feb3fa]" name="testsSetUo" is-config="true" duration-ms="2846" started-at="2022-06-13T11:29:34Z" finished-at="2022-06-13T11:29:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsSetUo -->
        <test-method status="FAIL" signature="myTest(java.lang.String)[pri:0, instance:test.Test@28feb3fa]" name="myTest" duration-ms="7575" started-at="2022-06-13T11:29:37Z" data-provider="dp" finished-at="2022-06-13T11:29:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[телевізор,Samsung,100000]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: element is not attached to the page document
  (Session info: chrome=102.0.5005.63)
For documentation on this error, please visit: https://selenium.dev/exceptions/#stale_element_reference
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'DESKTOP-1JNUMFV', ip: '192.168.0.107', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_202'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [4ff5ddde47c0d91e22314122b1927f6c, isElementSelected {id=5065fd59-a8e6-48d1-becc-494b19807f1e}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.63, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\Natalia\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:57491}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57491/devtoo..., se:cdpVersion: 102.0.5005.63, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (4ff5ddde47c0d91e22314122b1927f6c)] -> xpath: //a[@data-id='Samsung']]
Session ID: 4ff5ddde47c0d91e22314122b1927f6c]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document
  (Session info: chrome=102.0.5005.63)
For documentation on this error, please visit: https://selenium.dev/exceptions/#stale_element_reference
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'DESKTOP-1JNUMFV', ip: '192.168.0.107', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_202'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [4ff5ddde47c0d91e22314122b1927f6c, isElementSelected {id=5065fd59-a8e6-48d1-becc-494b19807f1e}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.63, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\Natalia\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:57491}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57491/devtoo..., se:cdpVersion: 102.0.5005.63, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (4ff5ddde47c0d91e22314122b1927f6c)] -> xpath: //a[@data-id='Samsung']]
Session ID: 4ff5ddde47c0d91e22314122b1927f6c
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:567)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:251)
	at org.openqa.selenium.remote.RemoteWebElement.isSelected(RemoteWebElement.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
	at com.sun.proxy.$Proxy15.isSelected(Unknown Source)
	at Decorator.CheckBox.mySetChecked(CheckBox.java:18)
	at pages.SearchResultPage.takeCheckBoxSamsung(SearchResultPage.java:50)
	at businessObject.CheckFilters.takeCheckBox(CheckFilters.java:24)
	at test.Test.myTest(Test.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:400)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.Test@28feb3fa]" name="tearDown" is-config="true" duration-ms="730" started-at="2022-06-13T11:29:44Z" finished-at="2022-06-13T11:29:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testsSetUo()[pri:0, instance:test.Test@28feb3fa]" name="testsSetUo" is-config="true" duration-ms="4150" started-at="2022-06-13T11:29:45Z" finished-at="2022-06-13T11:29:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsSetUo -->
        <test-method status="FAIL" signature="myFailedTest(java.lang.String)[pri:0, instance:test.Test@28feb3fa]" name="myFailedTest" duration-ms="11735" started-at="2022-06-13T11:29:49Z" data-provider="dp" finished-at="2022-06-13T11:30:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ноутбук,HP,50000]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at test.Test.myFailedTest(Test.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:400)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myFailedTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.Test@28feb3fa]" name="tearDown" is-config="true" duration-ms="770" started-at="2022-06-13T11:30:01Z" finished-at="2022-06-13T11:30:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testsSetUo()[pri:0, instance:test.Test@28feb3fa]" name="testsSetUo" is-config="true" duration-ms="4391" started-at="2022-06-13T11:30:02Z" finished-at="2022-06-13T11:30:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsSetUo -->
        <test-method status="FAIL" signature="myFailedTest(java.lang.String)[pri:0, instance:test.Test@28feb3fa]" name="myFailedTest" duration-ms="11880" started-at="2022-06-13T11:30:06Z" data-provider="dp" finished-at="2022-06-13T11:30:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[телевізор,Samsung,100000]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at test.Test.myFailedTest(Test.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:400)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myFailedTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.Test@28feb3fa]" name="tearDown" is-config="true" duration-ms="1130" started-at="2022-06-13T11:30:18Z" finished-at="2022-06-13T11:30:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.Test -->
    </test> <!-- test.Test -->
  </suite> <!-- Suite -->
</testng-results>
